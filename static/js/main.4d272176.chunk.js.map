{"version":3,"sources":["Components/Navbar.jsx","Services/cryptoApi.jsx","Components/Cryptocurrencies.jsx","Components/LineChart.jsx","Components/CryptoDetails.jsx","Services/cryptoNewsApi.jsx","Components/News.jsx","Components/Homepage.jsx","Components/Exchanges.jsx","App.js","app/store.jsx","index.js"],"names":["Navbar","useState","active","setActive","sceenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","size","Title","level","to","onClick","MenuOutlined","theme","Item","icon","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timeperiod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","Cryptocurrencies","simplified","cryptosList","data","isFetching","cryptos","setCryptos","searchTerm","setSearchTerm","filterData","coins","filter","coin","name","toLowerCase","includes","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","uuid","title","rank","extra","iconUrl","alt","hoverable","millify","price","marketCap","change","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Tooltip","Legend","Typography","Text","Option","Select","CryptoDetails","useParams","setTimeperiod","cryptoDetails","stats","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","supply","confirmed","CheckOutlined","StopOutlined","ExclamationCircleOutlined","total","circulating","console","log","symbol","defaultValue","date","HTMLReactParser","description","links","link","type","href","rel","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","News","setNewsCategory","cryptoNews","demo","span","showSearch","filterOption","input","option","children","indexOf","news","style","maxWidth","maxHeight","image","thumbnail","contentUrl","substring","provider","moment","datePublished","startOf","fromNow","Homepage","globalStats","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Exchanges","App","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.4d272176.chunk.js","sourcesContent":["import { Button, Menu, Avatar, Typography } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  HomeOutlined,\r\n  MoneyCollectOutlined,\r\n  BulbOutlined,\r\n  FundOutlined,\r\n  MenuOutlined,\r\n} from \"@ant-design/icons\";\r\nexport default function Navbar() {\r\n  const [active, setActive] = useState(true);\r\n  const [sceenSize, setScreenSize] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setScreenSize(window.innerWidth);\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (sceenSize < 768) {\r\n      setActive(false);\r\n    } else {\r\n      setActive(true);\r\n    }\r\n  }, [sceenSize]);\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <div className=\"logo-container\">\r\n        <Avatar src=\"/crypto.jpg\" size=\"large\" />\r\n        <Typography.Title level={2} className=\"logo\">\r\n          <Link to=\"/\">CryptoControl </Link>\r\n        </Typography.Title>\r\n        <Button\r\n          className=\"menu-control-container\"\r\n          onClick={() => setActive(!active)}\r\n        >\r\n          <MenuOutlined />\r\n        </Button>\r\n      </div>\r\n      {active && (\r\n        <Menu theme=\"dark\">\r\n          <Menu.Item icon={<HomeOutlined />}>\r\n            <Link to=\"/\">Home</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<FundOutlined />}>\r\n            <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<MoneyCollectOutlined />}>\r\n            <Link to=\"/exchanges\">Exchanges</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<BulbOutlined />}>\r\n            <Link to=\"/news\">News</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoApiHeaders = {\r\n  \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\r\n  \"x-rapidapi-key\": \"54669d781fmsh9659ef466a1aaecp13fa11jsn70f79c531658\",\r\n};\r\nconst baseUrl = \"https://coinranking1.p.rapidapi.com\";\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: \"cryptoApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptos: builder.query({\r\n      query: (count) => createRequest(`/coins?limit=${count}`),\r\n    }),\r\n    getCryptoDetails: builder.query({\r\n      query: (coinId) => createRequest(`/coin/${coinId}`),\r\n    }),\r\n    getCryptoHistory: builder.query({\r\n      query: ({ coinId, timeperiod }) =>\r\n        createRequest(`coin/${coinId}/history?timeperiod=${timeperiod}`),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetCryptosQuery,\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery,\r\n} = cryptoApi;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport millify from \"millify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Row, Col, Input } from \"antd\";\r\nimport { useGetCryptosQuery } from \"../Services/cryptoApi\";\r\n\r\nexport default function Cryptocurrencies({ simplified }) {\r\n  const count = simplified ? 10 : 100;\r\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\r\n  const [cryptos, setCryptos] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const filterData = cryptosList?.data?.coins.filter((coin) =>\r\n      coin.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setCryptos(filterData);\r\n  }, [cryptosList, searchTerm]);\r\n\r\n  if (isFetching) {\r\n    return \"Loading....\";\r\n  }\r\n  return (\r\n    <>\r\n      {!simplified && (\r\n        <div className=\"search-crypto\">\r\n          <Input\r\n            placeholder=\"Search cryptocurrency\"\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n      )}\r\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n        {cryptos?.map((currency) => (\r\n          <Col\r\n            xs={24}\r\n            sm={12}\r\n            lg={6}\r\n            className=\"crypto-card\"\r\n            key={currency.uuid}\r\n          >\r\n            <Link to={`/crypto/${currency.uuid}`}>\r\n              <Card\r\n                title={`${currency.rank}.${currency.name}`}\r\n                extra={\r\n                  <img\r\n                    className=\"crypto-image\"\r\n                    src={currency.iconUrl}\r\n                    alt=\"alt\"\r\n                  />\r\n                }\r\n                hoverable\r\n              >\r\n                <p>Price:{millify(currency.price)}</p>\r\n                <p>Market cap:{millify(currency.marketCap)}</p>\r\n                <p>Daily change:{millify(currency.change)}</p>\r\n              </Card>\r\n            </Link>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Col, Row, Typography } from \"antd\";\r\n\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n// const { Title } = Typography;\r\n\r\nexport default function LineChart({ coinHistory, currentPrice, coinName }) {\r\n  const coinPrice = [];\r\n  const coinTimestamp = [];\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinPrice.push(coinHistory?.data?.history[i].price);\r\n  }\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinTimestamp.push(\r\n      new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString()\r\n    );\r\n  }\r\n\r\n  let data = {\r\n    labels: coinTimestamp,\r\n    datasets: [\r\n      {\r\n        label: \"Price In USD\",\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: \"#0071bd\",\r\n        borderColor: \"#0071bd\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  let options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"chart-header\">\r\n        <Typography.Title level={2} className=\"chart-title\">\r\n          {coinName} Price Chart\r\n        </Typography.Title>\r\n        <Col className=\"price-container\">\r\n          <Typography.Title level={5} className=\"price-change\">\r\n            Change: {coinHistory?.data?.change}%\r\n          </Typography.Title>\r\n          <Typography.Title level={5} className=\"current-price\">\r\n            Current {coinName} Price: $ {currentPrice}\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport millify from \"millify\";\r\nimport { Col, Row, Typography, Select } from \"antd\";\r\nimport {\r\n  MoneyCollectOutlined,\r\n  DollarCircleOutlined,\r\n  FundOutlined,\r\n  ExclamationCircleOutlined,\r\n  StopOutlined,\r\n  TrophyOutlined,\r\n  CheckOutlined,\r\n  NumberOutlined,\r\n  ThunderboltOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport {\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery,\r\n} from \"../Services/cryptoApi\";\r\nimport LineChart from \"./LineChart\";\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nexport default function CryptoDetails() {\r\n  const { coinId } = useParams();\r\n  const [timeperiod, setTimeperiod] = useState(\"7d\");\r\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n  const { data: coinHistory } = useGetCryptoHistoryQuery({\r\n    coinId,\r\n    timeperiod,\r\n  });\r\n\r\n  const cryptoDetails = data?.data?.coin;\r\n\r\n  if (isFetching) return \"Loader...\";\r\n\r\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\r\n\r\n  const stats = [\r\n    {\r\n      title: \"Price to USD\",\r\n      value: `$ ${cryptoDetails?.price && millify(cryptoDetails?.price)}`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    { title: \"Rank\", value: cryptoDetails?.rank, icon: <NumberOutlined /> },\r\n    {\r\n      title: \"24h Volume\",\r\n      value: `$ ${cryptoDetails?.volume && millify(cryptoDetails?.volume)}`,\r\n      icon: <ThunderboltOutlined />,\r\n    },\r\n    {\r\n      title: \"Market Cap\",\r\n      value: `$ ${\r\n        cryptoDetails?.marketCap && millify(cryptoDetails?.marketCap)\r\n      }`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"All-time-high(daily avg.)\",\r\n      value: `$ ${\r\n        cryptoDetails?.allTimeHigh?.price &&\r\n        millify(cryptoDetails?.allTimeHigh?.price)\r\n      }`,\r\n      icon: <TrophyOutlined />,\r\n    },\r\n  ];\r\n\r\n  const genericStats = [\r\n    {\r\n      title: \"Number Of Markets\",\r\n      value: cryptoDetails?.numberOfMarkets,\r\n      icon: <FundOutlined />,\r\n    },\r\n    {\r\n      title: \"Number Of Exchanges\",\r\n      value: cryptoDetails?.numberOfExchanges,\r\n      icon: <MoneyCollectOutlined />,\r\n    },\r\n    {\r\n      title: \"Aprroved Supply\",\r\n      value: cryptoDetails?.supply?.confirmed ? (\r\n        <CheckOutlined />\r\n      ) : (\r\n        <StopOutlined />\r\n      ),\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"Total Supply\",\r\n      value: `$ ${\r\n        cryptoDetails?.supply?.total && millify(cryptoDetails?.supply?.total)\r\n      }`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"Circulating Supply\",\r\n      value: `$ ${\r\n        cryptoDetails?.supply?.circulating &&\r\n        millify(cryptoDetails?.supply?.circulating)\r\n      }`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n  ];\r\n\r\n  console.log(\"coinHistory1:\", coinHistory);\r\n\r\n  return (\r\n    <Col className=\"coin-detail-container\">\r\n      <Col className=\"coin-heading-container\">\r\n        <Title level={2} className=\"coin-name\">\r\n          {data?.data?.coin.name} ({data?.data?.coin.symbol}) Price\r\n        </Title>\r\n        <p>\r\n          {cryptoDetails.name} live price in US Dollar (USD). View value\r\n          statistics, market cap and supply.\r\n        </p>\r\n      </Col>\r\n      <Select\r\n        defaultValue=\"7d\"\r\n        className=\"select-timeperiod\"\r\n        placeholder=\"Select Timeperiod\"\r\n        onChange={(value) => setTimeperiod(value)}\r\n      >\r\n        {time.map((date) => (\r\n          <Option key={date}>{date}</Option>\r\n        ))}\r\n      </Select>\r\n      <LineChart\r\n        coinHistory={coinHistory}\r\n        currentPrice={millify(cryptoDetails?.price)}\r\n        coinName={cryptoDetails?.name}\r\n      />\r\n      <Col className=\"stats-container\">\r\n        <Col className=\"coin-value-statistics\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">\r\n              {cryptoDetails.name} Value Statistics\r\n            </Title>\r\n            <p>\r\n              An overview showing the statistics of {cryptoDetails.name}, such\r\n              as the base and quote currency, the rank, and trading volume.\r\n            </p>\r\n          </Col>\r\n          {stats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n        <Col className=\"other-stats-info\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">\r\n              Other Stats Info\r\n            </Title>\r\n            <p>\r\n              An overview showing the statistics of {cryptoDetails.name}, such\r\n              as the base and quote currency, the rank, and trading volume.\r\n            </p>\r\n          </Col>\r\n          {genericStats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n      <Col className=\"coin-desc-link\">\r\n        <Row className=\"coin-desc\">\r\n          <Title level={3} className=\"coin-details-heading\">\r\n            What is {cryptoDetails.name}?\r\n          </Title>\r\n          {HTMLReactParser(cryptoDetails.description)}\r\n        </Row>\r\n        <Col className=\"coin-links\">\r\n          <Title level={3} className=\"coin-details-heading\">\r\n            {cryptoDetails.name} Links\r\n          </Title>\r\n          {cryptoDetails.links?.map((link) => (\r\n            <Row className=\"coin-link\" key={link.name}>\r\n              <Title level={5} className=\"link-name\">\r\n                {link.type}\r\n              </Title>\r\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\r\n                {link.name}\r\n              </a>\r\n            </Row>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n    </Col>\r\n  );\r\n}\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoNewsHeaders = {\r\n  \"x-bingapis-sdk\": \"true\",\r\n  \"x-rapidapi-host\": \"bing-news-search1.p.rapidapi.com\",\r\n  \"x-rapidapi-key\": \"54669d781fmsh9659ef466a1aaecp13fa11jsn70f79c531658\",\r\n};\r\n\r\nconst baseUrl = \"https://bing-news-search1.p.rapidapi.com\";\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\r\n\r\nexport const cryptoNewsApi = createApi({\r\n  reducerPath: \"cryptoNewsApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptoNews: builder.query({\r\n      query: ({ newsCategory, count }) =>\r\n        createRequest(\r\n          `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\r\n        ),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\r\n","import React, { useState } from \"react\";\r\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { useGetCryptoNewsQuery } from \"../Services/cryptoNewsApi\";\r\nimport { useGetCryptosQuery } from \"../Services/cryptoApi\";\r\n\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nexport default function News({ simplified }) {\r\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\r\n\r\n  const { data: cryptoNews } = useGetCryptoNewsQuery({\r\n    newsCategory,\r\n    count: simplified ? 6 : 12,\r\n  });\r\n  const { data } = useGetCryptosQuery(100);\r\n\r\n  const demo =\r\n    \"https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News\";\r\n\r\n  if (!cryptoNews?.value) return \"Loading...\";\r\n\r\n  return (\r\n    <Row gutter={[24, 24]}>\r\n      {!simplified && (\r\n        <Col span={24}>\r\n          <Select\r\n            showSearch\r\n            className=\"select-news\"\r\n            placeholder=\"select a crypto\"\r\n            onChange={(value) => setNewsCategory(value)}\r\n            filterOption={(input, option) =>\r\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n          >\r\n            <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\r\n            {data?.data?.coins.map((coin) => (\r\n              <Option value={coin.name}>{coin.name}</Option>\r\n            ))}\r\n          </Select>\r\n        </Col>\r\n      )}\r\n      {cryptoNews.value.map((news, i) => (\r\n        <Col xs={24} sm={12} lg={8} key={i}>\r\n          <Card hoverable className=\"news-card\">\r\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n              <div className=\"news-img-container\">\r\n                <Title className=\"news-tile\" level={4}>\r\n                  {news.name}\r\n                </Title>\r\n                <img\r\n                  style={{ maxWidth: \"200px\", maxHeight: \"100px\" }}\r\n                  src={news?.image?.thumbnail?.contentUrl || demo}\r\n                  alt=\"newsImg\"\r\n                />\r\n              </div>\r\n              <p>\r\n                {news.description > 100\r\n                  ? `${news.description.substring(0, 100)}...`\r\n                  : news.description}\r\n              </p>\r\n              <div className=\"provider-container\">\r\n                <div>\r\n                  <Avatar\r\n                    src={news.provider[0]?.image?.thumbnail?.contentUrl || demo}\r\n                    alt=\"news\"\r\n                  ></Avatar>\r\n                  <Text className=\"provider-name\">\r\n                    {news.provider[0]?.name}\r\n                  </Text>\r\n                </div>\r\n                <Text>\r\n                  {moment(news.datePublished).startOf(\"ss\").fromNow()}\r\n                </Text>\r\n              </div>\r\n            </a>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Typography, Row, Col, Statistic } from \"antd\";\r\nimport { useGetCryptosQuery } from \"../Services/cryptoApi\";\r\nimport millify from \"millify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport News from \"../Components/News\";\r\nimport Cryptocurrencies from \"../Components/Cryptocurrencies\";\r\nconst { Title } = Typography;\r\n\r\nexport default function Homepage() {\r\n  const { data, isFetching } = useGetCryptosQuery(10);\r\n\r\n  const globalStats = data?.data?.stats;\r\n  if (isFetching) {\r\n    return \"Loading...\";\r\n  }\r\n  return (\r\n    <>\r\n      <Title level={2} className=\"heading\">\r\n        Global Crypto Stats\r\n      </Title>\r\n      <Row gutter={[32, 32]}>\r\n        <Col span={12}>\r\n          <Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Exchanges\"\r\n            value={millify(globalStats.totalExchanges)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Market Cap:\"\r\n            value={`$${millify(globalStats.totalMarketCap)}`}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total 24h Volume\"\r\n            value={`$${millify(globalStats.total24hVolume)}`}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Markets\"\r\n            value={millify(globalStats.totalMarkets)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"home-title\">\r\n          Top 10 Cryptos In The World\r\n        </Title>\r\n        <Title level={3} className=\"show-more\">\r\n          <Link to=\"/cryptocurrencies\">Show more</Link>\r\n        </Title>\r\n      </div>\r\n      <Cryptocurrencies simplified />\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"home-title\">\r\n          Latest Crypto News\r\n        </Title>\r\n        <Title level={3}>\r\n          <Link to=\"/news\">Show more</Link>\r\n        </Title>\r\n      </div>\r\n      <News simplified />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Exchanges() {\r\n  return <div>Exchanges</div>;\r\n}\r\n","import { Switch, Route, Link } from \"react-router-dom\";\nimport { Layout, Typography, Space } from \"antd\";\nimport { Navbar } from \"./Components\";\nimport Homepage from \"./Components/Homepage\";\nimport Exchanges from \"./Components/Exchanges\";\nimport Cryptocurrencies from \"./Components/Cryptocurrencies\";\nimport CryptoDetails from \"./Components/CryptoDetails\";\nimport News from \"./Components/News\";\n\nimport \"./App.css\";\nfunction App() {\n  return (\n    <>\n      <div className=\"app\">\n        <div className=\"navbar\">\n          <Navbar />\n        </div>\n        <div className=\"main\">\n          <Layout>\n            <div className=\"routes\">\n              <Switch>\n                <Route exact path=\"/\">\n                  <Homepage />\n                </Route>\n                <Route exact path=\"/exchanges\">\n                  <Exchanges />\n                </Route>\n                <Route exact path=\"/cryptocurrencies\">\n                  <Cryptocurrencies />\n                </Route>\n                <Route exact path=\"/crypto/:coinId\">\n                  <CryptoDetails />\n                </Route>\n                <Route exact path=\"/news\">\n                  <News />\n                </Route>\n              </Switch>\n            </div>\n          </Layout>\n          <div className=\"footer\">\n            <Typography.Title\n              level={5}\n              style={{ color: \"white\", textAlign: \"center\" }}\n            >\n              Cryptoverse <br />\n              All rights reserverd\n            </Typography.Title>\n            <Space>\n              <Link to=\"/\">Home</Link>\n              <Link to=\"/exchanges\">Exchanges</Link>\n              <Link to=\"/news\">News</Link>\n            </Space>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport { cryptoApi } from \"../Services/cryptoApi\";\r\nimport { cryptoNewsApi } from \"../Services/cryptoNewsApi\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport store from \"./app/store\";\nimport \"antd/dist/antd.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}